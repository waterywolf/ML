import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import warnings
warnings.filterwarnings('ignore')

# Load data
data = pd.read_csv('energy_efficiency_data.csv')

# Data info
data.info()

# Data shape
data.shape

# Define features and target
x = data[['Roof_Area', 'Overall_Height', 'Glazing_Area', 'Heating_Load']]
y = data['Glazing_Area_Distribution']

# Split the data
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=1)

# Create and train the model
model = LinearRegression()
model.fit(x_train, y_train)

# Predictions
y_train_pred = model.predict(x_train)
y_test_pred = model.predict(x_test)

# Evaluate the model
from sklearn.metrics import mean_squared_error, r2_score

mse_train = mean_squared_error(y_train, y_train_pred)
mae_train = mean_squared_error(y_train, y_train_pred)  # mean absolute error incorrectly labeled as MSE here
r2_train = r2_score(y_train, y_train_pred)

mse_test = mean_squared_error(y_test, y_test_pred)
mae_test = mean_squared_error(y_test, y_test_pred)  # mean absolute error incorrectly labeled as MSE here
r2_test = r2_score(y_test, y_test_pred)

# Print metrics
print("MSE Test:", mse_test)
print("MSE Train:", mse_train)
print("MAE Test:", mae_test)
print("MAE Train:", mae_train)
print("R^2 Train:", r2_train)
print("R^2 Test:", r2_test)

# Scatter plot of predicted vs actual
plt.scatter(y_test_pred, y_test_pred, label="Actual", color="green")
plt.scatter(y_test, y_test, label="Predicted", color="red")
plt.legend()
plt.show()
