from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import ConfusionMatrixDisplay, classification_report, accuracy_score
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns

# Load the dataset
df = pd.read_csv('/content/Heart.csv')

# Display initial data information
print("First few rows of data:\n", df.head())
print("Data shape:", df.shape)
print("Missing values per column:\n", df.isnull().sum())
print("Data info:\n")
df.info()

# Select relevant columns for analysis
data = df[['Age', 'Sex', 'ChestPain', 'RestBP', 'Chol']]

# Split the data into training and test sets
train, test = train_test_split(data, test_size=0.25, random_state=1)
print("Training set shape:", train.shape)
print("Test set shape:", test.shape)

# Scenario: COVID-19 test results analysis
# Given data:
# - Predicted 100 reports as COVID positive, but only 45 of those were actually positive
# - Total 50 people in the sample were actually COVID positive
# - 500 total samples

# Define actual and predicted outcomes
actual = np.concatenate((np.ones(45), np.zeros(450), np.ones(5)))    # 45 true positives, 5 false negatives, 450 true negatives
predicted = np.concatenate((np.ones(100), np.zeros(400)))             # 100 predicted positives, rest predicted negatives

# Display the confusion matrix
ConfusionMatrixDisplay.from_predictions(actual, predicted)
plt.show()

# Print classification report for precision, recall, F1-score
print("\nClassification Report:\n", classification_report(actual, predicted))

# Calculate and print accuracy
accuracy = accuracy_score(actual, predicted)
print("\nAccuracy:", accuracy)
