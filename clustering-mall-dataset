import pandas as pd
from sklearn.preprocessing import LabelEncoder, StandardScaler
from sklearn.cluster import KMeans, AgglomerativeClustering
from sklearn.metrics import silhouette_score
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
data = pd.read_csv('Mall_Customers.csv')

# Inspect the data
print(data.head())

# Label Encoding for categorical columns (e.g., Gender)
if 'Gender' in data.columns:
    label_encoder = LabelEncoder()
    data['Gender'] = label_encoder.fit_transform(data['Gender'])

# Select relevant columns (e.g., Annual Income and Spending Score)
X = data[['Annual Income (k$)', 'Spending Score (1-100)']]

# Standardize the data
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# K-Means Clustering
kmeans = KMeans(n_clusters=5, random_state=42)
kmeans_labels = kmeans.fit_predict(X_scaled)

# Evaluate with silhouette score
silhouette_avg = silhouette_score(X_scaled, kmeans_labels)
print(f'Silhouette Score for K-Means: {silhouette_avg:.2f}')

# Visualize K-Means Clusters
plt.figure(figsize=(10, 6))
sns.scatterplot(x=X['Annual Income (k$)'], y=X['Spending Score (1-100)'], hue=kmeans_labels, palette='viridis')
plt.title('K-Means Clustering')
plt.show()

# Hierarchical Clustering
hierarchical = AgglomerativeClustering(n_clusters=5)
hierarchical_labels = hierarchical.fit_predict(X_scaled)

# Evaluate with silhouette score
silhouette_avg_hier = silhouette_score(X_scaled, hierarchical_labels)
print(f'Silhouette Score for Hierarchical Clustering: {silhouette_avg_hier:.2f}')

# Visualize Hierarchical Clusters
plt.figure(figsize=(10, 6))
sns.scatterplot(x=X['Annual Income (k$)'], y=X['Spending Score (1-100)'], hue=hierarchical_labels, palette='plasma')
plt.title('Hierarchical Clustering')
plt.show()
